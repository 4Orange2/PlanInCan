/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:Home_Page:786725:
  appc.background(230);
} //_CODE_:Home_Page:786725:

public void button4_click1(GButton source, GEvent event) { //_CODE_:button4:578192:
} //_CODE_:button4:578192:

public void button5_click1(GButton source, GEvent event) { //_CODE_:button5:967084:
  page_num = 2;
} //_CODE_:button5:967084:

public void button6_click1(GButton source, GEvent event) { //_CODE_:button6:499462:
} //_CODE_:button6:499462:

public void custom_slider1_change1(GCustomSlider source, GEvent event) { //_CODE_:Budget_Amount:478935:
  desired_budget = Budget_Amount.getValueF();
} //_CODE_:Budget_Amount:478935:

public void ActivityTypeSelected(GDropList source, GEvent event) { //_CODE_:ActivityType:761144:
  preferred_type = ActivityType.getSelectedText();
  //println("YAY: ", preferred_type);
  if ("Nature and Environment".equals(preferred_type) || "History and Landmarks".equals(preferred_type) || "Day-to-day Culture".equals(preferred_type)) {
      attraction_preference = true;
  }
  else {
    attraction_preference = false;
  }
} //_CODE_:ActivityType:761144:

synchronized public void win_draw3(PApplet appc, GWinData data) { //_CODE_:Recommended_Page:693305:
} //_CODE_:Recommended_Page:693305:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:textfield1:507049:
  recommend_text1_entered = textfield1.getText().trim().toLowerCase();
  if (recommend_text1_entered.equals("northern")) {
    desired_area = "northern";
  }
  else if (recommend_text1_entered.equals("eastern")) {
    desired_area = "eastern";
  }
  else if (recommend_text1_entered.equals("western")) {
    desired_area = "western";
  }
  else if (recommend_text1_entered.equals("southern")) {
    desired_area = "southern";
  }
  println(recommend_text1_entered);
} //_CODE_:textfield1:507049:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:320579:
  yes_public_transit = true;
  //println("yes");
} //_CODE_:button3:320579:

public void button7_click1(GButton source, GEvent event) { //_CODE_:button7:732297:
  yes_public_transit = false;
  //println("no");
} //_CODE_:button7:732297:

public void textfield2_change1(GTextField source, GEvent event) { //_CODE_:textfield2:725393:
  recommend_text2_entered = textfield2.getText().trim().toLowerCase();
  println(recommend_text2_entered);
  if (recommend_text2_entered.equals("summer")) {
    desired_season = "summer";
  }
  else if (recommend_text2_entered.equals("spring")) {
    desired_season = "spring";
  }
  else if (recommend_text2_entered.equals("fall")) {
    desired_season = "fall";
  }
  else if (recommend_text2_entered.equals("winter")) {
    desired_season = "winter";
  }
} //_CODE_:textfield2:725393:

public void button8_click1(GButton source, GEvent event) { //_CODE_:button8:440593:
  to_be_displayed = Canada_Plan.calculateRecommended(desired_budget, preferred_type, desired_area, yes_public_transit, desired_season);
  recommended_viewing = true;
  textfield1.setText("");
  textfield2.setText("");
  yes_public_transit = false;
  desired_season = "";
} //_CODE_:button8:440593:

public void button9_click1(GButton source, GEvent event) { //_CODE_:button9:308323:
  page_num = 1;
} //_CODE_:button9:308323:


synchronized public void win_draw4(PApplet appc, GWinData data) { //_CODE_:Saved_Plans:620595:
} //_CODE_:Saved_Plans:620595:

synchronized public void win_draw5(PApplet appc, GWinData data) { //_CODE_:New_Plan_Page:329619:
} //_CODE_:New_Plan_Page:329619:

synchronized public void win_draw6(PApplet appc, GWinData data) { //_CODE_:Map_Controls:298678:
} //_CODE_:Map_Controls:298678:

public void Guidance_clicked(GButton source, GEvent event) { //_CODE_:Guidance_button:215568:
  user_map_description = true;
  zoomFactor = 1;
} //_CODE_:Guidance_button:215568:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:854571:
  city_viewing = false;
  user_map_description = true;
  zoomFactor = 1;
} //_CODE_:button1:854571:

public void Back_Home_Map(GButton source, GEvent event) { //_CODE_:button2:493081:
  page_num = 1;
  city_viewing = false;
  zoomFactor = 1;
  user_map_description = true;
} //_CODE_:button2:493081:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(int page_num){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  if (page_num == 1) {
    attraction_preference = false;
    preferred_type = "No preference";
    if (recommended_open == true) {
      Recommended_Page.close();
      recommended_open = false;
    }
    if (map_open == true) {
      Map_Controls.close();
      map_open = false;
    }
  Home_Page = GWindow.getWindow(this, "Window title", 0, 0, 500, 300, JAVA2D);
  Home_Page.noLoop();
  Home_Page.setActionOnClose(G4P.CLOSE_WINDOW);
  Home_Page.addDrawHandler(this, "win_draw1");
  button4 = new GButton(Home_Page, 27, 158, 92, 30);
  button4.setText("Saved Plans");
  button4.addEventHandler(this, "button4_click1");
  button5 = new GButton(Home_Page, 25, 111, 93, 30);
  button5.setText("Recommended Plans");
  button5.addEventHandler(this, "button5_click1");
  button6 = new GButton(Home_Page, 24, 67, 94, 30);
  button6.setText("Start a New Plan");
  button6.addEventHandler(this, "button6_click1");
  label1 = new GLabel(Home_Page, 9, 18, 140, 37);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("What travel plan would you like to see?");
  label1.setOpaque(false);
  Budget_Amount = new GCustomSlider(Home_Page, 151, 119, 147, 70, "grey_blue");
  Budget_Amount.setShowValue(true);
  Budget_Amount.setShowLimits(true);
  Budget_Amount.setLimits(desired_budget, 1300.0, 5000.0);
  Budget_Amount.setNbrTicks(10);
  Budget_Amount.setShowTicks(true);
  Budget_Amount.setNumberFormat(G4P.DECIMAL, 2);
  Budget_Amount.setOpaque(false);
  Budget_Amount.addEventHandler(this, "custom_slider1_change1");
  label2 = new GLabel(Home_Page, 148, 79, 215, 37);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("How many dollars would you roughly like to spend on each day of your travel?");
  label2.setOpaque(false);
  label3 = new GLabel(Home_Page, 232, 8, 258, 37);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Input values for one or all of the questions below for output tailored towards you.");
  label3.setOpaque(false);
  label4 = new GLabel(Home_Page, 139, 241, 152, 46);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("What types of activities do you enjoy the most?");
  label4.setOpaque(false);
  ActivityType = new GDropList(Home_Page, 304, 199, 158, 95, 4, 10);
  ActivityType.setItems(loadStrings("list_761144"), 0);
  ActivityType.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  ActivityType.addEventHandler(this, "ActivityTypeSelected");
  label5 = new GLabel(Home_Page, 352, 45, 148, 40);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Do not input if generally browsing travel plans.");
  label5.setOpaque(false);
    home_open = true;
    Home_Page.loop();
  }
  else if (page_num == 2) {
    if (home_open == true) {
      Home_Page.close();
      home_open = false;
    }
    Recommended_Page = GWindow.getWindow(this, "Window title", 0, 0, 500, 300, JAVA2D);
  Recommended_Page.noLoop();
  Recommended_Page.setActionOnClose(G4P.CLOSE_WINDOW);
  Recommended_Page.addDrawHandler(this, "win_draw3");
  label8 = new GLabel(Recommended_Page, 18, 17, 218, 50);
  label8.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label8.setText("In addition to the questions on the home_page, feel free to answer any of these for more accurate recommendations.");
  label8.setOpaque(false);
  label9 = new GLabel(Recommended_Page, 16, 82, 220, 52);
  label9.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label9.setText("Generally, would you like to travel in the northern, eastern, western, or southern parts of Canada (pick one of the four).");
  label9.setOpaque(false);
  textfield1 = new GTextField(Recommended_Page, 294, 79, 120, 30, G4P.SCROLLBARS_NONE);
  textfield1.setOpaque(true);
  textfield1.addEventHandler(this, "textfield1_change1");
  label10 = new GLabel(Recommended_Page, 16, 150, 222, 69);
  label10.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label10.setText("Would you like somewhere with good access to public transport? (Click whichever desired button once)");
  label10.setOpaque(false);
  button3 = new GButton(Recommended_Page, 256, 171, 80, 30);
  button3.setText("Yes");
  button3.addEventHandler(this, "button3_click1");
  button7 = new GButton(Recommended_Page, 359, 171, 80, 30);
  button7.setText("No");
  button7.addEventHandler(this, "button7_click1");
  label11 = new GLabel(Recommended_Page, 13, 239, 228, 53);
  label11.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label11.setText("Which of the four seasons are you planning on travelling in?");
  label11.setOpaque(false);
  textfield2 = new GTextField(Recommended_Page, 295, 252, 120, 30, G4P.SCROLLBARS_NONE);
  textfield2.setOpaque(true);
  textfield2.addEventHandler(this, "textfield2_change1");
  button8 = new GButton(Recommended_Page, 294, 18, 187, 30);
  button8.setText("Generate Recommendation");
  button8.addEventHandler(this, "button8_click1");
  button9 = new GButton(Recommended_Page, 413, 266, 85, 30);
  button9.setText("Back To Home Page");
  button9.addEventHandler(this, "button9_click1");
  Recommended_Page.loop();
  }
  else if (page_num == 3) {
    Saved_Plans = GWindow.getWindow(this, "Window title", 0, 0, 250, 250, JAVA2D);
    Saved_Plans.noLoop();
    Saved_Plans.setActionOnClose(G4P.CLOSE_WINDOW);
    Saved_Plans.addDrawHandler(this, "win_draw4");
    Saved_Plans.loop();
  }
  else if (page_num == 4) { 
    map_open = true;
    if (home_open == true) {
      Home_Page.close();
      home_open = false;
    }
    Map_Controls = GWindow.getWindow(this, "Window title", 0, 0, 250, 250, JAVA2D);
  Map_Controls.noLoop();
  Map_Controls.setActionOnClose(G4P.CLOSE_WINDOW);
  Map_Controls.addDrawHandler(this, "win_draw6");
  Guidance_button = new GButton(Map_Controls, 24, 24, 80, 30);
  Guidance_button.setText("Give Map Guidance");
  Guidance_button.addEventHandler(this, "Guidance_clicked");
  button1 = new GButton(Map_Controls, 25, 75, 80, 30);
  button1.setText("View Main Map");
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(Map_Controls, 155, 54, 80, 30);
  button2.setText("Go back to home page");
  button2.addEventHandler(this, "Back_Home_Map");
    Map_Controls.loop();
  }
}

// Variable declarations 
// autogenerated do not edit
GWindow Home_Page;
GButton button4; 
GButton button5; 
GButton button6; 
GLabel label1; 
GCustomSlider Budget_Amount; 
GLabel label2; 
GLabel label3; 
GLabel label4; 
GDropList ActivityType; 
GLabel label5; 
GWindow Recommended_Page;
GLabel label8; 
GLabel label9; 
GTextField textfield1; 
GLabel label10; 
GButton button3; 
GButton button7; 
GLabel label11; 
GTextField textfield2; 
GButton button8;
GButton button9; 
GWindow Saved_Plans;
GWindow New_Plan_Page;
GWindow Map_Controls;
GButton Guidance_button; 
GButton button1; 
GLabel label6; 
GButton button2; 
GLabel label7;
